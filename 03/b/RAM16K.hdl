// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Choose if to read or to write and on which RAM4k.
    DMux4Way(in = load, sel = address[0..1], a = RAM4k0, b = RAM4k1, 
    c = RAM4k2, d = RAM4k3);
    // Initiate the registers inside each RAM by the input parameters - one at the time.
    RAM4K(in = in, load = RAM4k0, address = address[2..13], out = out0);
    RAM4K(in = in, load = RAM4k1, address = address[2..13], out = out1);
    RAM4K(in = in, load = RAM4k2, address = address[2..13], out = out2);
    RAM4K(in = in, load = RAM4k3, address = address[2..13], out = out3);
    
    // Outputting the addresed register 
    Mux4Way16(a = out0, b = out1, c = out2, d = out3, sel = address[0..1], out = out);
}