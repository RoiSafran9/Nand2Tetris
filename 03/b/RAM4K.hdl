// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Choose if to read or to write and on which RAM512.
    DMux8Way(in = load, sel = address[0..2], a = RAM5120, b = RAM5121, 
    c = RAM5122, d = RAM5123, e = RAM5124, f = RAM5125, g = RAM5126, h = RAM5127);
    // Initiate the registers inside each RAM by the input parameters - one at the time.
    RAM512(in = in, load = RAM5120, address = address[3..11], out = out0);
    RAM512(in = in, load = RAM5121, address = address[3..11], out = out1);
    RAM512(in = in, load = RAM5122, address = address[3..11], out = out2);
    RAM512(in = in, load = RAM5123, address = address[3..11], out = out3);
    RAM512(in = in, load = RAM5124, address = address[3..11], out = out4);
    RAM512(in = in, load = RAM5125, address = address[3..11], out = out5);
    RAM512(in = in, load = RAM5126, address = address[3..11], out = out6);
    RAM512(in = in, load = RAM5127, address = address[3..11], out = out7);
    
    // Outputting the addresed register 
    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, 
    g = out6, h = out7, sel = address[0..2], out = out);
    }