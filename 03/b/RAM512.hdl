// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Choose if to read or to write and on which RAM64.
    DMux8Way(in = load, sel = address[0..2], a = RAM640, b = RAM641, 
    c = RAM642, d = RAM643, e = RAM644, f = RAM645, g = RAM646, h = RAM647);
    // Initiate the registers inside each RAM by the input parameters - one at the time.
    RAM64(in = in, load = RAM640, address = address[3..8], out = out0);
    RAM64(in = in, load = RAM641, address = address[3..8], out = out1);
    RAM64(in = in, load = RAM642, address = address[3..8], out = out2);
    RAM64(in = in, load = RAM643, address = address[3..8], out = out3);
    RAM64(in = in, load = RAM644, address = address[3..8], out = out4);
    RAM64(in = in, load = RAM645, address = address[3..8], out = out5);
    RAM64(in = in, load = RAM646, address = address[3..8], out = out6);
    RAM64(in = in, load = RAM647, address = address[3..8], out = out7);
    
    // Outputting the addresed register 
    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, 
    g = out6, h = out7, sel = address[0..2], out = out);
}